*nvim-test.txt*  nvim-test

==============================================================================
INTRODUCTION                                    *nvim-test-introduction*

Test Runner for neovim

------------------------------------------------------------------------------
COMMANDS                                        *nvim-test-command*

:TestSuite                                      *:TestSuite*
	Run the whole test suite

:TestFile                                       *:TestFile*
	Run all tests in the current file

:TestEdit                                       *:TestEdit*
	Edit tests for the current file

:TestNearest                                    *:TestNearest*
	Run the test nearest to the cursor

:TestLast                                       *:TestLast*
	Rerun the latest test

:TestVisit                                      *:TestVisit*
	Open the last run test in the current buffer

:TestInfo                                       *:TestInfo*
	Show an information about plugin

------------------------------------------------------------------------------
SETUP																						*nvim-test-setup*

Setup the plugin (default values): >

  require('nvim-test').setup {
    run = true,                 -- run tests (using for debug)
    commands_create = true,     -- create commands (TestFile, TestLast, ...)
    filename_modifier = ":.",   -- modify filenames before tests run(:h filename-modifiers)
    silent = false,             -- less notifications
    term = "terminal",          -- a terminal to run ("terminal"|"toggleterm")
    termOpts = {
      direction = "vertical",   -- terminal's direction ("horizontal"|"vertical"|"float")
      width = 96,               -- terminal's width (for vertical|float)
      height = 24,              -- terminal's height (for horizontal|float)
      go_back = false,          -- return focus to original window after executing
      stopinsert = "auto",      -- exit from insert mode (true|false|"auto")
      keep_one = true,          -- keep only one terminal for testing
    },
    runners = {               -- setup tests runners
      go = "nvim-test.runners.go-test",
      javascript = "nvim-test.runners.jest",
      lua = "nvim-test.runners.busted",
      python = "nvim-test.runners.pytest",
      rust = "nvim-test.runners.cargo-test",
      typescript = "nvim-test.runners.jest",
    }
  }

Setup a runner: >

  require('nvim-test.runners.jest'):setup {
    command = "~/node_modules/.bin/jest",                                       -- a command to run the test runner
    args = { "--collectCoverage=false" },                                       -- default arguments
    env = { CUSTOM_VAR = 'value' },                                             -- custom environment variables

    file_pattern = "\\v(__tests__/.*|(spec|test))\\.(js|jsx|coffee|ts|tsx)$",   -- determine whether a file is a testfile
    find_files = { "{name}.test.{ext}", "{name}.spec.{ext}" },                  -- find testfile for a file

    filename_modifier = nil,                                                    -- modify filename before tests run (:h filename-modifiers)
    working_directory = nil,                                                    -- set working directory (cwd by default)
  }

------------------------------------------------------------------------------
RUNNERS                                         *nvim-test-runners*

                                                *nvim-test-busted*

Default options: >

  require('nvim-test.runners.busted'):setup {
    command = "busted",
    file_pattern = "\\v_spec\\.(lua|moon)$",
    find_files = "{name}_spec.{ext}",
  }
<
                                                *nvim-test-cargo-test*

Cargotest runner may find the nearest crate root.

Default options: >

  require('nvim-test.runners.cargo-test'):setup {
    command = "cargo",
    args = { "test" },

    package = false,    -- Set to true, to find the nearest create root
  }
<
                                                *nvim-test-cypress*

Default options: >

  require('nvim-test.runners.cypress'):setup {
    command = "go",
    args = { "test", "-v" }
  }
<
                                                *nvim-test-go-test*

Default options: >

  require('nvim-test.runners.go-test'):setup {
    command = {"./node_modules/.bin/cypress", "cypress"},
    args = { "run" },
    file_pattern = "\\v(__tests__/.*|(spec|test))\\.(js|jsx|coffee|ts|tsx)$",
    find_files = { "{name}.test.{ext}", "{name}.spec.{ext}" },
  }
<
                                                *nvim-test-jest*

Default options: >

  require('nvim-test.runners.jest'):setup {
    command = { "./node_modules/.bin/jest", "jest" },
    file_pattern = "\\v(__tests__/.*|(spec|test))\\.(js|jsx|coffee|ts|tsx)$",
    find_files = { "{name}.test.{ext}", "{name}.spec.{ext}" },
  }
<
                                                *nvim-test-mocha*

Default options: >

  require('nvim-test.runners.mocha'):setup {
    command = { "./node_modules/.bin/mocha", "mocha" },
    file_pattern = "\\v(tests?/.*|test)\\.(js|jsx|coffee)$",
    find_files = { "{name}.test.{ext}" },
  }
<
                                                *nvim-test-pytest*

Default options: >

  require('nvim-test.runners.pytest'):setup {
    command = { (vim.env.VIRTUAL_ENV or "venv") .. "/bin/pytest", "pytest" },
    file_pattern = "\\v(test_[^.]+|[^.]+_test|tests)\\.py$",
    find_files = { "test_{name}.py", "{name}_test.py", "tests.py" },
  }
<
                                                *nvim-test-pyunit*

Default options: >

  require('nvim-test.runners.pytest'):setup {
    command = { (vim.env.VIRTUAL_ENV or "venv") .. "/bin/python", "python" },
    args = { "-m", "unittest" },
    file_pattern = "\\v^test.*\\.py$",
    find_files = { "test_{name}.py" },
  }
<
                                                *nvim-test-ts-mocha*

Default options: >

  require('nvim-test.runners.ts-mocha'):setup {
    command = { "./node_modules/.bin/ts-mocha", "ts-mocha" },
    file_pattern = "\\v(tests?/.*|test)\\.(ts|tsx)$",
    find_files = { "{name}.test.{ext}" },
  }
<
                                                *nvim-test-ts-vusted*

Default options: >

  require('nvim-test.runners.vusted'):setup {
    command = "vusted",
    file_pattern = "\\v_spec\\.(lua|moon)$",
    find_files = "{name}_spec.{ext}",
  }
<

------------------------------------------------------------------------------
ABOUT                                            *nvim-test-about*

Author:  Kirill Klenove <horneds@gmail.com>
License: Same terms as Vim itself (see |license|)

Grab the latest version or report a bug on GitHub:

https://github.com/klen/nvim-test

vim:tw=78:et:ft=help:norl:

